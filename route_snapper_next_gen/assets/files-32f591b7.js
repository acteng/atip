import{a2 as le,h as se,t as ue,S as ze,i as Ke,s as Xe,G as Ye,O as W,e as De,aA as re,a8 as T,f as He,a1 as Y,H as We,I as Qe,J as Ze,j as je,aB as ne,a3 as D}from"./stores-a0b7d27b.js";import{g as xe}from"./spread-8a54911c.js";function Yt(e){return(e==null?void 0:e.length)!==void 0?e:Array.from(e)}function Dt(e,t){se(e,1,1,()=>{t.delete(e.key)})}function Ht(e,t,r,n,i,o,a,u,l,s,f,c){let h=e.length,g=o.length,y=h;const p={};for(;y--;)p[e[y].key]=y;const E=[],w=new Map,S=new Map,m=[];for(y=g;y--;){const P=c(i,o,y),A=r(P);let O=a.get(A);O?n&&m.push(()=>O.p(P,t)):(O=s(A,P),O.c()),w.set(A,E[y]=O),A in p&&S.set(A,Math.abs(y-p[A]))}const v=new Set,d=new Set;function X(P){ue(P,1),P.m(u,f),a.set(P.key,P),f=P.first,g--}for(;h&&g;){const P=E[g-1],A=e[h-1],O=P.key,J=A.key;P===A?(f=P.first,h--,g--):w.has(J)?!a.has(O)||v.has(O)?X(P):d.has(J)?h--:S.get(O)>S.get(J)?(d.add(O),X(P)):(v.add(J),h--):(l(A,a),h--)}for(;h--;){const P=e[h];w.has(P.key)||l(P,a)}for(;g;)X(E[g-1]);return le(m),E}function et(e){let t,r,n,i;const o=e[3].default,a=Ye(o,e,e[2],null);let u=[{type:"button"},{class:"govuk-button govuk-button--secondary"},{"data-module":"govuk-button"},e[1]],l={};for(let s=0;s<u.length;s+=1)l=W(l,u[s]);return{c(){t=De("button"),a&&a.c(),re(t,l),T(t,"no-bottom-margin",e[0]),T(t,"svelte-m0sq6k",!0)},m(s,f){He(s,t,f),a&&a.m(t,null),t.autofocus&&t.focus(),r=!0,n||(i=[Y(t,"click",e[4]),Y(t,"mouseenter",e[5]),Y(t,"mouseleave",e[6])],n=!0)},p(s,[f]){a&&a.p&&(!r||f&4)&&We(a,o,s,s[2],r?Ze(o,s[2],f,null):Qe(s[2]),null),re(t,l=xe(u,[{type:"button"},{class:"govuk-button govuk-button--secondary"},{"data-module":"govuk-button"},f&2&&s[1]])),T(t,"no-bottom-margin",s[0]),T(t,"svelte-m0sq6k",!0)},i(s){r||(ue(a,s),r=!0)},o(s){se(a,s),r=!1},d(s){s&&je(t),a&&a.d(s),n=!1,le(i)}}}function tt(e,t,r){let{$$slots:n={},$$scope:i}=t,{noBottomMargin:o=!1}=t;function a(s){D.call(this,e,s)}function u(s){D.call(this,e,s)}function l(s){D.call(this,e,s)}return e.$$set=s=>{r(1,t=W(W({},t),ne(s))),"noBottomMargin"in s&&r(0,o=s.noBottomMargin),"$$scope"in s&&r(2,i=s.$$scope)},t=ne(t),[o,t,i,n,a,u,l]}class Wt extends ze{constructor(t){super(),Ke(this,t,tt,et,Xe,{noBottomMargin:0})}}var M=63710088e-1,fe={centimeters:M*100,centimetres:M*100,degrees:360/(2*Math.PI),feet:M*3.28084,inches:M*39.37,kilometers:M/1e3,kilometres:M/1e3,meters:M,metres:M,miles:M/1609.344,millimeters:M*1e3,millimetres:M*1e3,nauticalmiles:M/1852,radians:1,yards:M*1.0936};function $(e,t,r={}){const n={type:"Feature"};return(r.id===0||r.id)&&(n.id=r.id),r.bbox&&(n.bbox=r.bbox),n.properties=t||{},n.geometry=e,n}function G(e,t,r={}){if(!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!C(e[0])||!C(e[1]))throw new Error("coordinates must contain numbers");return $({type:"Point",coordinates:e},t,r)}function Qt(e,t,r={}){for(const i of e){if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");if(i[i.length-1].length!==i[0].length)throw new Error("First and last Position are not equivalent.");for(let o=0;o<i[i.length-1].length;o++)if(i[i.length-1][o]!==i[0][o])throw new Error("First and last Position are not equivalent.")}return $({type:"Polygon",coordinates:e},t,r)}function q(e,t,r={}){if(e.length<2)throw new Error("coordinates must be an array of two or more positions");return $({type:"LineString",coordinates:e},t,r)}function Zt(e,t={}){const r={type:"FeatureCollection"};return t.id&&(r.id=t.id),t.bbox&&(r.bbox=t.bbox),r.features=e,r}function jt(e,t,r={}){return $({type:"MultiPolygon",coordinates:e},t,r)}function xt(e,t="kilometers"){const r=fe[t];if(!r)throw new Error(t+" units is invalid");return e*r}function er(e,t="kilometers"){const r=fe[t];if(!r)throw new Error(t+" units is invalid");return e/r}function tr(e){return e%(2*Math.PI)*180/Math.PI}function rr(e){return e%360*Math.PI/180}function C(e){return!isNaN(e)&&e!==null&&!Array.isArray(e)}function ce(e){return e!==null&&typeof e=="object"&&!Array.isArray(e)}var rt=Object.defineProperty,b=(e,t)=>rt(e,"name",{value:t,configurable:!0});function R(e,t,r){if(e!==null)for(var n,i,o,a,u,l,s,f=0,c=0,h,g=e.type,y=g==="FeatureCollection",p=g==="Feature",E=y?e.features.length:1,w=0;w<E;w++){s=y?e.features[w].geometry:p?e.geometry:e,h=s?s.type==="GeometryCollection":!1,u=h?s.geometries.length:1;for(var S=0;S<u;S++){var m=0,v=0;if(a=h?s.geometries[S]:s,a!==null){l=a.coordinates;var d=a.type;switch(f=r&&(d==="Polygon"||d==="MultiPolygon")?1:0,d){case null:break;case"Point":if(t(l,c,w,m,v)===!1)return!1;c++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(t(l[n],c,w,m,v)===!1)return!1;c++,d==="MultiPoint"&&m++}d==="LineString"&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-f;i++){if(t(l[n][i],c,w,m,v)===!1)return!1;c++}d==="MultiLineString"&&m++,d==="Polygon"&&v++}d==="Polygon"&&m++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(v=0,i=0;i<l[n].length;i++){for(o=0;o<l[n][i].length-f;o++){if(t(l[n][i][o],c,w,m,v)===!1)return!1;c++}v++}m++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(R(a.geometries[n],t,r)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}b(R,"coordEach");function nt(e,t,r,n){var i=r;return R(e,function(o,a,u,l,s){a===0&&r===void 0?i=o:i=t(i,o,a,u,l,s)},n),i}b(nt,"coordReduce");function ye(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&t(e.features[r].properties,r)!==!1;r++);break;case"Feature":t(e.properties,0);break}}b(ye,"propEach");function ot(e,t,r){var n=r;return ye(e,function(i,o){o===0&&r===void 0?n=i:n=t(n,i,o)}),n}b(ot,"propReduce");function ge(e,t){if(e.type==="Feature")t(e,0);else if(e.type==="FeatureCollection")for(var r=0;r<e.features.length&&t(e.features[r],r)!==!1;r++);}b(ge,"featureEach");function it(e,t,r){var n=r;return ge(e,function(i,o){o===0&&r===void 0?n=i:n=t(n,i,o)}),n}b(it,"featureReduce");function at(e){var t=[];return R(e,function(r){t.push(r)}),t}b(at,"coordAll");function x(e,t){var r,n,i,o,a,u,l,s,f,c,h=0,g=e.type==="FeatureCollection",y=e.type==="Feature",p=g?e.features.length:1;for(r=0;r<p;r++){for(u=g?e.features[r].geometry:y?e.geometry:e,s=g?e.features[r].properties:y?e.properties:{},f=g?e.features[r].bbox:y?e.bbox:void 0,c=g?e.features[r].id:y?e.id:void 0,l=u?u.type==="GeometryCollection":!1,a=l?u.geometries.length:1,i=0;i<a;i++){if(o=l?u.geometries[i]:u,o===null){if(t(null,h,s,f,c)===!1)return!1;continue}switch(o.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":{if(t(o,h,s,f,c)===!1)return!1;break}case"GeometryCollection":{for(n=0;n<o.geometries.length;n++)if(t(o.geometries[n],h,s,f,c)===!1)return!1;break}default:throw new Error("Unknown Geometry Type")}}h++}}b(x,"geomEach");function he(e,t,r){var n=r;return x(e,function(i,o,a,u,l){o===0&&r===void 0?n=i:n=t(n,i,o,a,u,l)}),n}b(he,"geomReduce");function U(e,t){x(e,function(r,n,i,o,a){var u=r===null?null:r.type;switch(u){case null:case"Point":case"LineString":case"Polygon":return t($(r,i,{bbox:o,id:a}),n,0)===!1?!1:void 0}var l;switch(u){case"MultiPoint":l="Point";break;case"MultiLineString":l="LineString";break;case"MultiPolygon":l="Polygon";break}for(var s=0;s<r.coordinates.length;s++){var f=r.coordinates[s],c={type:l,coordinates:f};if(t($(c,i),n,s)===!1)return!1}})}b(U,"flattenEach");function lt(e,t,r){var n=r;return U(e,function(i,o,a){o===0&&a===0&&r===void 0?n=i:n=t(n,i,o,a)}),n}b(lt,"flattenReduce");function me(e,t){U(e,function(r,n,i){var o=0;if(r.geometry){var a=r.geometry.type;if(!(a==="Point"||a==="MultiPoint")){var u,l=0,s=0,f=0;if(R(r,function(c,h,g,y,p){if(u===void 0||n>l||y>s||p>f){u=c,l=n,s=y,f=p,o=0;return}var E=q([u,c],r.properties);if(t(E,n,i,p,o)===!1)return!1;o++,u=c})===!1)return!1}}})}b(me,"segmentEach");function st(e,t,r){var n=r,i=!1;return me(e,function(o,a,u,l,s){i===!1&&r===void 0?n=o:n=t(n,o,a,u,l,s),i=!0}),n}b(st,"segmentReduce");function pe(e,t){if(!e)throw new Error("geojson is required");U(e,function(r,n,i){if(r.geometry!==null){var o=r.geometry.type,a=r.geometry.coordinates;switch(o){case"LineString":if(t(r,n,i,0,0)===!1)return!1;break;case"Polygon":for(var u=0;u<a.length;u++)if(t(q(a[u],r.properties),n,i,u)===!1)return!1;break}}})}b(pe,"lineEach");function ut(e,t,r){var n=r;return pe(e,function(i,o,a,u){o===0&&r===void 0?n=i:n=t(n,i,o,a,u)}),n}b(ut,"lineReduce");function ft(e,t){if(t=t||{},!ce(t))throw new Error("options is invalid");var r=t.featureIndex||0,n=t.multiFeatureIndex||0,i=t.geometryIndex||0,o=t.segmentIndex||0,a=t.properties,u;switch(e.type){case"FeatureCollection":r<0&&(r=e.features.length+r),a=a||e.features[r].properties,u=e.features[r].geometry;break;case"Feature":a=a||e.properties,u=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":u=e;break;default:throw new Error("geojson is invalid")}if(u===null)return null;var l=u.coordinates;switch(u.type){case"Point":case"MultiPoint":return null;case"LineString":return o<0&&(o=l.length+o-1),q([l[o],l[o+1]],a,t);case"Polygon":return i<0&&(i=l.length+i),o<0&&(o=l[i].length+o-1),q([l[i][o],l[i][o+1]],a,t);case"MultiLineString":return n<0&&(n=l.length+n),o<0&&(o=l[n].length+o-1),q([l[n][o],l[n][o+1]],a,t);case"MultiPolygon":return n<0&&(n=l.length+n),i<0&&(i=l[n].length+i),o<0&&(o=l[n][i].length-o-1),q([l[n][i][o],l[n][i][o+1]],a,t)}throw new Error("geojson is invalid")}b(ft,"findSegment");function ct(e,t){if(t=t||{},!ce(t))throw new Error("options is invalid");var r=t.featureIndex||0,n=t.multiFeatureIndex||0,i=t.geometryIndex||0,o=t.coordIndex||0,a=t.properties,u;switch(e.type){case"FeatureCollection":r<0&&(r=e.features.length+r),a=a||e.features[r].properties,u=e.features[r].geometry;break;case"Feature":a=a||e.properties,u=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":u=e;break;default:throw new Error("geojson is invalid")}if(u===null)return null;var l=u.coordinates;switch(u.type){case"Point":return G(l,a,t);case"MultiPoint":return n<0&&(n=l.length+n),G(l[n],a,t);case"LineString":return o<0&&(o=l.length+o),G(l[o],a,t);case"Polygon":return i<0&&(i=l.length+i),o<0&&(o=l[i].length+o),G(l[i][o],a,t);case"MultiLineString":return n<0&&(n=l.length+n),o<0&&(o=l[n].length+o),G(l[n][o],a,t);case"MultiPolygon":return n<0&&(n=l.length+n),i<0&&(i=l[n].length+i),o<0&&(o=l[n][i].length-o),G(l[n][i][o],a,t)}throw new Error("geojson is invalid")}b(ct,"findPoint");var yt=Object.defineProperty,z=(e,t)=>yt(e,"name",{value:t,configurable:!0});function de(e){return he(e,(t,r)=>t+we(r),0)}z(de,"area");function we(e){let t=0,r;switch(e.type){case"Polygon":return Q(e.coordinates);case"MultiPolygon":for(r=0;r<e.coordinates.length;r++)t+=Q(e.coordinates[r]);return t;case"Point":case"MultiPoint":case"LineString":case"MultiLineString":return 0}return 0}z(we,"calculateArea");function Q(e){let t=0;if(e&&e.length>0){t+=Math.abs(Z(e[0]));for(let r=1;r<e.length;r++)t-=Math.abs(Z(e[r]))}return t}z(Q,"polygonArea");var gt=M*M/2,H=Math.PI/180;function Z(e){const t=e.length;if(t<=2)return 0;let r=0,n=0;for(;n<t;){const i=e[n],o=e[n+1===t?0:n+1],a=e[n+2>=t?(n+2)%t:n+2],u=i[0]*H,l=o[1]*H,s=a[0]*H;r+=(s-u)*Math.sin(l),n++}return r*gt}z(Z,"ringArea");var oe=de;function ve(e,t,r){if(e!==null)for(var n,i,o,a,u,l,s,f=0,c=0,h,g=e.type,y=g==="FeatureCollection",p=g==="Feature",E=y?e.features.length:1,w=0;w<E;w++){s=y?e.features[w].geometry:p?e.geometry:e,h=s?s.type==="GeometryCollection":!1,u=h?s.geometries.length:1;for(var S=0;S<u;S++){var m=0,v=0;if(a=h?s.geometries[S]:s,a!==null){l=a.coordinates;var d=a.type;switch(f=r&&(d==="Polygon"||d==="MultiPolygon")?1:0,d){case null:break;case"Point":if(t(l,c,w,m,v)===!1)return!1;c++,m++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(t(l[n],c,w,m,v)===!1)return!1;c++,d==="MultiPoint"&&m++}d==="LineString"&&m++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-f;i++){if(t(l[n][i],c,w,m,v)===!1)return!1;c++}d==="MultiLineString"&&m++,d==="Polygon"&&v++}d==="Polygon"&&m++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(v=0,i=0;i<l[n].length;i++){for(o=0;o<l[n][i].length-f;o++){if(t(l[n][i][o],c,w,m,v)===!1)return!1;c++}v++}m++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(ve(a.geometries[n],t,r)===!1)return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function N(e,t={}){if(e.bbox!=null&&t.recompute!==!0)return e.bbox;const r=[1/0,1/0,-1/0,-1/0];return ve(e,n=>{r[0]>n[0]&&(r[0]=n[0]),r[1]>n[1]&&(r[1]=n[1]),r[2]<n[0]&&(r[2]=n[0]),r[3]<n[1]&&(r[3]=n[1])}),r}var ht=N;const nr=Object.freeze(Object.defineProperty({__proto__:null,bbox:N,default:ht},Symbol.toStringTag,{value:"Module"}));function mt(e,t){var r=0,n=0,i=0,o=0,a=0,u=0,l=0,s=0,f=null,c=null,h=e[0],g=e[1],y=t.length;for(r;r<y;r++){n=0;var p=t[r].length-1,E=t[r];if(f=E[0],f[0]!==E[p][0]&&f[1]!==E[p][1])throw new Error("First and last coordinates in a ring must be the same");for(a=f[0]-h,u=f[1]-g,n;n<p;n++){if(c=E[n+1],s=c[1]-g,u<0&&s<0||u>0&&s>0){f=c,u=s,a=f[0]-h;continue}if(l=c[0]-e[0],s>0&&u<=0){if(o=a*s-l*u,o>0)i=i+1;else if(o===0)return 0}else if(u>0&&s<=0){if(o=a*s-l*u,o<0)i=i+1;else if(o===0)return 0}else if(s===0&&u<0){if(o=a*s-l*u,o===0)return 0}else if(u===0&&s<0){if(o=a*s-l*u,o===0)return 0}else if(u===0&&s===0){if(l<=0&&a>=0)return 0;if(a<=0&&l>=0)return 0}f=c,u=s,a=l}}return i%2!==0}var pt=Object.defineProperty,F=(e,t)=>pt(e,"name",{value:t,configurable:!0});function Pe(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return[...e.geometry.coordinates];if(e.type==="Point")return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}F(Pe,"getCoord");function dt(e){if(Array.isArray(e))return e;if(e.type==="Feature"){if(e.geometry!==null)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}F(dt,"getCoords");function be(e){if(e.length>1&&C(e[0])&&C(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return be(e[0]);throw new Error("coordinates must only contain numbers")}F(be,"containsNumber");function wt(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}F(wt,"geojsonType");function vt(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||e.type!=="Feature"||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}F(vt,"featureOf");function Pt(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||e.type!=="FeatureCollection")throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||n.type!=="Feature"||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}F(Pt,"collectionOf");function Ee(e){return e.type==="Feature"?e.geometry:e}F(Ee,"getGeom");function bt(e,t){return e.type==="FeatureCollection"?"FeatureCollection":e.type==="GeometryCollection"?"GeometryCollection":e.type==="Feature"&&e.geometry!==null?e.geometry.type:e.type}F(bt,"getType");var Et=Object.defineProperty,Me=(e,t)=>Et(e,"name",{value:t,configurable:!0});function I(e,t,r={}){if(!e)throw new Error("point is required");if(!t)throw new Error("polygon is required");const n=Pe(e),i=Ee(t),o=i.type,a=t.bbox;let u=i.coordinates;if(a&&_e(n,a)===!1)return!1;o==="Polygon"&&(u=[u]);let l=!1;for(var s=0;s<u.length;++s){const f=mt(n,u[s]);if(f===0)return!r.ignoreBoundary;f&&(l=!0)}return l}Me(I,"booleanPointInPolygon");function _e(e,t){return t[0]<=e[0]&&t[1]<=e[1]&&t[2]>=e[0]&&t[3]>=e[1]}Me(_e,"inBBox");var Mt=Object.defineProperty,k=(e,t)=>Mt(e,"name",{value:t,configurable:!0});function Se(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return[...e.geometry.coordinates];if(e.type==="Point")return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}k(Se,"getCoord");function Ae(e){if(Array.isArray(e))return e;if(e.type==="Feature"){if(e.geometry!==null)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}k(Ae,"getCoords");function Oe(e){if(e.length>1&&C(e[0])&&C(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return Oe(e[0]);throw new Error("coordinates must only contain numbers")}k(Oe,"containsNumber");function _t(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}k(_t,"geojsonType");function St(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||e.type!=="Feature"||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}k(St,"featureOf");function At(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||e.type!=="FeatureCollection")throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||n.type!=="Feature"||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}k(At,"collectionOf");function Ot(e){return e.type==="Feature"?e.geometry:e}k(Ot,"getGeom");function Ct(e,t){return e.type==="FeatureCollection"?"FeatureCollection":e.type==="GeometryCollection"?"GeometryCollection":e.type==="Feature"&&e.geometry!==null?e.geometry.type:e.type}k(Ct,"getType");var Ft=Object.defineProperty,Ce=(e,t)=>Ft(e,"name",{value:t,configurable:!0});function B(e,t,r={}){const n=Se(e),i=Ae(t);for(let o=0;o<i.length-1;o++){let a=!1;if(r.ignoreEndVertices&&(o===0&&(a="start"),o===i.length-2&&(a="end"),o===0&&o+1===i.length-1&&(a="both")),Fe(i[o],i[o+1],n,a,typeof r.epsilon>"u"?null:r.epsilon))return!0}return!1}Ce(B,"booleanPointOnLine");function Fe(e,t,r,n,i){const o=r[0],a=r[1],u=e[0],l=e[1],s=t[0],f=t[1],c=r[0]-u,h=r[1]-l,g=s-u,y=f-l,p=c*y-h*g;if(i!==null){if(Math.abs(p)>i)return!1}else if(p!==0)return!1;if(n){if(n==="start")return Math.abs(g)>=Math.abs(y)?g>0?u<o&&o<=s:s<=o&&o<u:y>0?l<a&&a<=f:f<=a&&a<l;if(n==="end")return Math.abs(g)>=Math.abs(y)?g>0?u<=o&&o<s:s<o&&o<=u:y>0?l<=a&&a<f:f<a&&a<=l;if(n==="both")return Math.abs(g)>=Math.abs(y)?g>0?u<o&&o<s:s<o&&o<u:y>0?l<a&&a<f:f<a&&a<l}else return Math.abs(g)>=Math.abs(y)?g>0?u<=o&&o<=s:s<=o&&o<=u:y>0?l<=a&&a<=f:f<=a&&a<=l;return!1}Ce(Fe,"isPointOnLineSegment");var kt=Object.defineProperty,L=(e,t)=>kt(e,"name",{value:t,configurable:!0});function Lt(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if(e.type==="Feature"&&e.geometry!==null&&e.geometry.type==="Point")return[...e.geometry.coordinates];if(e.type==="Point")return[...e.coordinates]}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return[...e];throw new Error("coord must be GeoJSON Point or an Array of numbers")}L(Lt,"getCoord");function Gt(e){if(Array.isArray(e))return e;if(e.type==="Feature"){if(e.geometry!==null)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")}L(Gt,"getCoords");function ke(e){if(e.length>1&&C(e[0])&&C(e[1]))return!0;if(Array.isArray(e[0])&&e[0].length)return ke(e[0]);throw new Error("coordinates must only contain numbers")}L(ke,"containsNumber");function qt(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}L(qt,"geojsonType");function $t(e,t,r){if(!e)throw new Error("No feature passed");if(!r)throw new Error(".featureOf() requires a name");if(!e||e.type!=="Feature"||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}L($t,"featureOf");function Nt(e,t,r){if(!e)throw new Error("No featureCollection passed");if(!r)throw new Error(".collectionOf() requires a name");if(!e||e.type!=="FeatureCollection")throw new Error("Invalid input to "+r+", FeatureCollection required");for(const n of e.features){if(!n||n.type!=="Feature"||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}L(Nt,"collectionOf");function V(e){return e.type==="Feature"?e.geometry:e}L(V,"getGeom");function Bt(e,t){return e.type==="FeatureCollection"?"FeatureCollection":e.type==="GeometryCollection"?"GeometryCollection":e.type==="Feature"&&e.geometry!==null?e.geometry.type:e.type}L(Bt,"getType");var Rt=Object.defineProperty,_=(e,t)=>Rt(e,"name",{value:t,configurable:!0});function Le(e,t){const r=V(e),n=V(t),i=r.type,o=n.type,a=r.coordinates,u=n.coordinates;switch(i){case"Point":switch(o){case"Point":return K(a,u);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPoint":switch(o){case"Point":return qe(r,n);case"MultiPoint":return $e(r,n);default:throw new Error("feature2 "+o+" geometry not supported")}case"LineString":switch(o){case"Point":return B(n,r,{ignoreEndVertices:!0});case"LineString":return Re(r,n);case"MultiPoint":return Ne(r,n);default:throw new Error("feature2 "+o+" geometry not supported")}case"Polygon":switch(o){case"Point":return I(n,r,{ignoreBoundary:!0});case"LineString":return Ie(r,n);case"Polygon":return ee(r,n);case"MultiPoint":return Be(r,n);default:throw new Error("feature2 "+o+" geometry not supported")}case"MultiPolygon":switch(o){case"Polygon":return Ge(r,n);default:throw new Error("feature2 "+o+" geometry not supported")}default:throw new Error("feature1 "+i+" geometry not supported")}}_(Le,"booleanContains");function Ge(e,t){return e.coordinates.some(r=>ee({type:"Polygon",coordinates:r},t))}_(Ge,"isPolygonInMultiPolygon");function qe(e,t){let r,n=!1;for(r=0;r<e.coordinates.length;r++)if(K(e.coordinates[r],t.coordinates)){n=!0;break}return n}_(qe,"isPointInMultiPoint");function $e(e,t){for(const r of t.coordinates){let n=!1;for(const i of e.coordinates)if(K(r,i)){n=!0;break}if(!n)return!1}return!0}_($e,"isMultiPointInMultiPoint");function Ne(e,t){let r=!1;for(const n of t.coordinates)if(B(n,e,{ignoreEndVertices:!0})&&(r=!0),!B(n,e))return!1;return!!r}_(Ne,"isMultiPointOnLine");function Be(e,t){for(const r of t.coordinates)if(!I(r,e,{ignoreBoundary:!0}))return!1;return!0}_(Be,"isMultiPointInPoly");function Re(e,t){let r=!1;for(const n of t.coordinates)if(B({type:"Point",coordinates:n},e,{ignoreEndVertices:!0})&&(r=!0),!B({type:"Point",coordinates:n},e,{ignoreEndVertices:!1}))return!1;return r}_(Re,"isLineOnLine");function Ie(e,t){let r=!1,n=0;const i=N(e),o=N(t);if(!te(i,o))return!1;for(n;n<t.coordinates.length-1;n++){const a=Je(t.coordinates[n],t.coordinates[n+1]);if(I({type:"Point",coordinates:a},e,{ignoreBoundary:!0})){r=!0;break}}return r}_(Ie,"isLineInPoly");function ee(e,t){if(e.type==="Feature"&&e.geometry===null||t.type==="Feature"&&t.geometry===null)return!1;const r=N(e),n=N(t);if(!te(r,n))return!1;const i=V(t).coordinates;for(const o of i)for(const a of o)if(!I(a,e))return!1;return!0}_(ee,"isPolyInPoly");function te(e,t){return!(e[0]>t[0]||e[2]<t[2]||e[1]>t[1]||e[3]<t[3])}_(te,"doBBoxOverlap");function K(e,t){return e[0]===t[0]&&e[1]===t[1]}_(K,"compareCoords");function Je(e,t){return[(e[0]+t[0])/2,(e[1]+t[1])/2]}_(Je,"getMidpoint");var ie=Le;function or(e){for(let t of e.features)t.properties.full_name=`${t.properties.level}_${t.properties.name}`;return e.features.sort((t,r)=>oe(t)-oe(r)),e}function It(e,t){let r=t.features.find(n=>Jt(e,n));return r?r.properties.full_name:null}function Jt(e,t){let r=t.geometry;r.type=="MultiPolygon"&&(r={type:"Polygon",coordinates:r.coordinates[0]});for(let n of e)if(n.geometry.type=="MultiLineString"){for(let i of n.geometry.coordinates)if(!ie(r,{type:"LineString",coordinates:i}))return!1}else if(!ie(r,n))return!1;return!0}function j(e,t){return`sketch/${e}/${t}`}function Te(e,t){try{window.localStorage.setItem(e,t)}catch(r){console.log(`Couldn't set local storage for ${e}: ${r}`),window.alert("Your changes couldn't be saved because you've run out of local storage. Please fix this problem on the next page and try again."),window.location.href="local_storage.html"}}function Tt(e,t,r){return`scheme.html?authority=${e}&schema=${r}&file=${t}`}function ir(e){let t=`sketch/${e}/`,r=[];for(let n=0;n<window.localStorage.length;n++){let i=window.localStorage.key(n);if(i.startsWith(t)){let o="v1";try{o=Ue(JSON.parse(window.localStorage.getItem(i)))}catch{}r.push([i.slice(t.length),o])}}return r.sort(),r}function ar(){let e=new Map;for(let r=0;r<window.localStorage.length;r++){let i=window.localStorage.key(r).split("/");if(i.length==3&&i[0]=="sketch"){let o=i[1],a=e.has(o)?e.get(o):0;e.set(o,a+1)}}let t=[...e.entries()];return t.sort((r,n)=>n[1]-r[1]),t}function Vt(e,t){let r=document.createElement("a");r.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(t)),r.setAttribute("download",e),document.body.appendChild(r),r.click(),document.body.removeChild(r)}function lr(e){let t=[];for(let r=0;r<window.localStorage.length;r++){let n=window.localStorage.key(r);n==e?t.push([n,j(e,"v1 sketch")]):n==`${e}_pipeline`&&t.push([n,j(e,"pipeline sketch")])}for(let[r,n]of t){console.log(`Renaming ${r} to ${n}`);try{let i=window.localStorage.getItem(r);Te(n,i),window.localStorage.removeItem(r)}catch(i){console.error(`Couldn't importOldFiles: ${i}`)}}}function Ve(e,t){var n;let r=JSON.parse(JSON.stringify(t));for(let i of r.features)(n=i.properties)==null||delete n.hide_while_editing;return r.authority=e,r.origin="atip-v2",r}function sr(e,t,r){let n=Ve(e,r);Vt(`${e}_${t}.geojson`,JSON.stringify(n,null,"  "))}function Ue(e){try{let t=Object.values(e.schemes)[0];if(t&&Object.hasOwn(t,"pipeline"))return"pipeline";if(t&&Object.hasOwn(t,"v2"))return"v2"}catch{}return"v1"}function ur(e,t,r){let n=JSON.parse(t),i=It(n.features,r);if(!i)throw new Error("Can't figure out the authority boundary that fully contains this scheme");n.authority=i;let o=Ue(n),a=Ut(n.authority,e);return Te(j(n.authority,a),JSON.stringify(Ve(n.authority,n))),Tt(n.authority,a,o)}function fr(){let e=[];for(let t=0;t<window.localStorage.length;t++){let r=window.localStorage.key(t);e.push([r,window.localStorage.getItem(r).length])}return e.sort((t,r)=>r[1]-t[1]),e}function Ut(e,t){let r=ae(ae(t,".json"),".geojson");return zt(r,`${e}_`)}function zt(e,t){return e.startsWith(t)?e.slice(t.length):e}function ae(e,t){return e.endsWith(t)?e.slice(0,-t.length):e}export{ht as A,or as B,fr as C,Wt as S,ur as a,Ve as b,ar as c,Vt as d,Yt as e,Tt as f,j as g,sr as h,lr as i,nr as j,C as k,ir as l,jt as m,rr as n,xt as o,Qt as p,er as q,tr as r,Te as s,G as t,$ as u,Zt as v,q as w,ce as x,Ht as y,Dt as z};
