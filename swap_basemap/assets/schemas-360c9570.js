import{S as y,i as w,s as k,e as h,h as d,N as H,j as $,x as N,p as v,M as A,b as F,c as K,d as B,g as C,az as J,k as L,m as I,w as T,l as Q,t as g,n as b,q as j,aK as U,aL as V,aM as x,aN as X,J as M,y as Y,o as ee,K as te,u as ne,I as oe,a as re,Q as D,C as R,D as se,W as ae,U as le,a0 as O,$ as q,V as ie,a4 as ce,a3 as ue,a2 as G,ar as W}from"./index-a45a4fa1.js";import{C as pe,a as fe,l as E,c}from"./StreetViewController-baa334c9.js";function de(r){let e;return{c(){e=h("span"),d(e,"class","svelte-kzgqtg"),H(e,"background",r[0])},m(o,n){$(o,e,n)},p(o,[n]){n&1&&H(e,"background",o[0])},i:N,o:N,d(o){o&&v(e)}}}function ge(r,e,o){let{color:n}=e;return r.$$set=t=>{"color"in t&&o(0,n=t.color)},[n]}class me extends y{constructor(e){super(),w(this,e,ge,de,k,{color:0})}}const _e="/atip/swap_basemap/assets/help-d011708a.svg";function he(r){let e,o;const n=r[1].default,t=U(n,r,r[4],null);return{c(){e=h("div"),t&&t.c(),d(e,"class","govuk-prose")},m(a,l){$(a,e,l),t&&t.m(e,null),o=!0},p(a,l){t&&t.p&&(!o||l&16)&&V(t,n,a,a[4],o?X(n,a[4],l,null):x(a[4]),null)},i(a){o||(g(t,a),o=!0)},o(a){b(t,a),o=!1},d(a){a&&v(e),t&&t.d(a)}}}function $e(r){let e,o,n,t,a,l,i,s,p;function f(u){r[3](u)}let S={title:"Help",$$slots:{default:[he]},$$scope:{ctx:r}};return r[0]!==void 0&&(S.open=r[0]),a=new A({props:S}),F.push(()=>K(a,"open",f)),{c(){e=h("button"),o=h("img"),t=B(),C(a.$$.fragment),J(o.src,n=_e)||d(o,"src",n),d(o,"title","Help"),d(o,"alt","Help"),d(e,"class","svelte-7d9d1l")},m(u,m){$(u,e,m),L(e,o),$(u,t,m),I(a,u,m),i=!0,s||(p=T(e,"click",r[2]),s=!0)},p(u,[m]){const P={};m&16&&(P.$$scope={dirty:m,ctx:u}),!l&&m&1&&(l=!0,P.open=u[0],Q(()=>l=!1)),a.$set(P)},i(u){i||(g(a.$$.fragment,u),i=!0)},o(u){b(a.$$.fragment,u),i=!1},d(u){u&&(v(e),v(t)),j(a,u),s=!1,p()}}}function ve(r,e,o){let{$$slots:n={},$$scope:t}=e,a=!1;const l=()=>o(0,a=!0);function i(s){a=s,o(0,a)}return r.$$set=s=>{"$$scope"in s&&o(4,t=s.$$scope)},[a,n,l,i,t]}class Ee extends y{constructor(e){super(),w(this,e,ve,$e,k,{})}}function Z(r,e,o){const n=r.slice();return n[1]=e[o][0],n[2]=e[o][1],n}function z(r){let e,o,n,t=r[1]+"",a,l,i;return o=new me({props:{color:r[2]}}),{c(){e=h("li"),C(o.$$.fragment),n=B(),a=ne(t),l=B()},m(s,p){$(s,e,p),I(o,e,null),L(e,n),L(e,a),L(e,l),i=!0},p(s,p){const f={};p&1&&(f.color=s[2]),o.$set(f),(!i||p&1)&&t!==(t=s[1]+"")&&oe(a,t)},i(s){i||(g(o.$$.fragment,s),i=!0)},o(s){b(o.$$.fragment,s),i=!1},d(s){s&&v(e),j(o)}}}function be(r){let e,o,n=M(r[0]),t=[];for(let l=0;l<n.length;l+=1)t[l]=z(Z(r,n,l));const a=l=>b(t[l],1,1,()=>{t[l]=null});return{c(){e=h("ul");for(let l=0;l<t.length;l+=1)t[l].c()},m(l,i){$(l,e,i);for(let s=0;s<t.length;s+=1)t[s]&&t[s].m(e,null);o=!0},p(l,i){if(i&1){n=M(l[0]);let s;for(s=0;s<n.length;s+=1){const p=Z(l,n,s);t[s]?(t[s].p(p,i),g(t[s],1)):(t[s]=z(p),t[s].c(),g(t[s],1),t[s].m(e,null))}for(Y(),s=n.length;s<t.length;s+=1)a(s);ee()}},i(l){if(!o){for(let i=0;i<n.length;i+=1)g(t[i]);o=!0}},o(l){t=t.filter(Boolean);for(let i=0;i<t.length;i+=1)b(t[i]);o=!1},d(l){l&&v(e),te(t,l)}}}function ye(r){let e,o;return e=new pe({props:{label:"Legend",$$slots:{default:[be]},$$scope:{ctx:r}}}),{c(){C(e.$$.fragment)},m(n,t){I(e,n,t),o=!0},p(n,[t]){const a={};t&33&&(a.$$scope={dirty:t,ctx:n}),e.$set(a)},i(n){o||(g(e.$$.fragment,n),o=!0)},o(n){b(e.$$.fragment,n),o=!1},d(n){j(e,n)}}}function we(r,e,o){let{rows:n}=e;return r.$$set=t=>{"rows"in t&&o(0,n=t.rows)},[n]}class Ne extends y{constructor(e){super(),w(this,e,we,ye,k,{rows:0})}}const ke="/atip/swap_basemap/assets/zoom_out_map-b2e1091a.svg";function Se(r){let e,o;return{c(){e=h("img"),J(e.src,o=ke)||d(e,"src",o),d(e,"alt","Zoom to show entire boundary")},m(n,t){$(n,e,t)},p:N,d(n){n&&v(e)}}}function Le(r){let e,o;return e=new re({props:{title:"Zoom to show entire boundary",$$slots:{default:[Se]},$$scope:{ctx:r}}}),e.$on("click",r[0]),{c(){C(e.$$.fragment)},m(n,t){I(e,n,t),o=!0},p(n,[t]){const a={};t&8&&(a.$$scope={dirty:t,ctx:n}),e.$set(a)},i(n){o||(g(e.$$.fragment,n),o=!0)},o(n){b(e.$$.fragment,n),o=!1},d(n){j(e,n)}}}function Ce(r,e,o){let n;D(r,R,l=>o(2,n=l));let{boundaryGeojson:t}=e;function a(){n.fitBounds(se(t),{padding:20,animate:!0,duration:500})}return r.$$set=l=>{"boundaryGeojson"in l&&o(1,t=l.boundaryGeojson)},[a,t]}class Be extends y{constructor(e){super(),w(this,e,Ce,Le,k,{boundaryGeojson:1})}}let _="interventions";function Ie(r,e,o){let n,t;D(r,R,s=>o(1,n=s)),D(r,ae,s=>o(2,t=s));let{colorInterventions:a}=e;le(n,_,t);const l=["!=","hide_while_editing",!0];return O(n,{id:"interventions-points",source:_,filter:["all",ce,l,["!=","endpoint",!0]],color:a,radius:fe}),q(n,{id:"interventions-lines",source:_,filter:["all",ue,l],color:a,width:E}),O(n,{id:"interventions-lines-endpoints",source:_,filter:["==","endpoint",!0],radius:.5*E,opacity:0,strokeColor:c.lineEndpointColor,strokeWidth:2}),ie(n,{id:"interventions-polygons",source:_,filter:["all",G,l],color:a,opacity:.2}),q(n,{id:"interventions-polygon-outlines",source:_,filter:["all",G,l],color:a,opacity:.5,width:.7*E}),r.$$set=s=>{"colorInterventions"in s&&o(0,a=s.colorInterventions)},r.$$.update=()=>{if(r.$$.dirty&6){let s=JSON.parse(JSON.stringify(t)),p=[];for(let f of s.features)if(f.geometry.type=="LineString"&&!f.properties.hide_while_editing)for(let S of[f.geometry.coordinates[0],f.geometry.coordinates[f.geometry.coordinates.length-1]])p.push({type:"Feature",properties:{endpoint:!0},geometry:{type:"Point",coordinates:S}});s.features=s.features.concat(p),n.getSource(_).setData(s)}},[a,n,t]}class De extends y{constructor(e){super(),w(this,e,Ie,null,k,{colorInterventions:0})}}function He(r){return{v1:"Scheme Design",v2:"Experimental Scheme Design",planning:"Development Planning",criticals:"Critical Issues",atf4:"ATF4 Scheme"}[r]}function Me(r){return{v1:"an intervention",v2:"an intervention",planning:"a development",criticals:"a critical issue",atf4:"an intervention"}[r]}function Oe(r){return{v1:"interventions",v2:"interventions",planning:"developments",criticals:"critical issues",atf4:"interventions"}[r]}function qe(r){return r=="planning"?W(["get","reference_type",["get","planning"]],{preapp:c.preapp,outline:c.outline,"reserved matters":c["reserved matters"],"local plan":c["local plan"]},"black"):W(["get","intervention_type"],{area:c.area,route:c.route,crossing:c.crossing,other:c.other},"white")}function Ge(r){return r=="planning"?[["Preapp",c.preapp],["Outline",c.outline],["Reserved matters",c["reserved matters"]],["Local plan",c["local plan"]]]:[["Areas",c.area],["Routes",c.route],["Crossings",c.crossing],["Other",c.other]]}export{me as C,Ee as H,De as I,Ne as L,Be as Z,Oe as a,He as b,qe as c,Ge as d,Me as s};
